








Networking (Interface, VLAN, Self-IP Address, Default Route) should be done during on-boarding, otherwise Unit can not be licensed.



╔══════════════╗
║   Monitors   ║
╚══════════════╝

tmsh create ltm monitor tcp-half-open /Common/TCPHalfOpen_Monitor { defaults-from tcp_half_open }
tmsh create ltm monitor http /Common/HTTP_Monitor { defaults-from http recv "HTTP/1." send "HEAD / HTTP/1.0\r\n\r\n" }
tmsh create ltm monitor gateway-icmp /Common/ICMP_Gateway_8888_Monitor { defaults-from gateway_icmp destination 8.8.8.8:* transparent enabled }
tmsh create ltm monitor gateway-icmp /Common/ICMP_Gateway_8844_Monitor { defaults-from gateway_icmp destination 8.8.4.4:* transparent enabled }



╔═══════════╗
║   Nodes   ║
╚═══════════╝

tmsh create ltm node /Common/10.1.10.1 { address 10.1.10.1 }
tmsh create ltm node /Common/10.1.20.11 { address 10.1.20.11 }
tmsh create ltm node /Common/10.1.20.12 { address 10.1.20.12 }
tmsh create ltm node /Common/10.1.20.13 { address 10.1.20.13 }
tmsh create ltm node /Common/10.1.20.17 { address 10.1.20.17 }
tmsh create ltm node /Common/10.1.20.20 { address 10.1.20.20 }
tmsh create ltm node /Common/10.1.20.32 { address 10.1.20.32 }
tmsh create ltm node /Common/10.1.20.41 { address 10.1.20.41 }
tmsh create ltm node /Common/10.1.20.42 { address 10.1.20.42 }
tmsh create ltm node /Common/10.1.20.43 { address 10.1.20.43 }
tmsh create ltm node /Common/10.1.20.44 { address 10.1.20.44 }
tmsh create ltm node /Common/10.1.20.251 { address 10.1.20.251 }
tmsh create ltm node /Common/10.1.20.252 { address 10.1.20.252 }



╔═══════════╗
║   Pools   ║
╚═══════════╝

tmsh create ltm pool /Common/ActiveDirectory_Pool { members replace-all-with { /Common/10.1.20.251:88 { address 10.1.20.251 session user-enabled state user-up } } min-active-members 1 monitor min 1 of { /Common/TCPHalfOpen_Monitor } }
tmsh create ltm pool /Common/DVWA_Pool { members replace-all-with { /Common/10.1.20.17:80 { address 10.1.20.17 session user-enabled state user-up } } min-active-members 1 monitor min 1 of { /Common/HTTP_Monitor } }
tmsh create ltm pool /Common/Hackazon_Pool { members replace-all-with { /Common/10.1.20.20:80 { address 10.1.20.20 session user-enabled state user-up } } min-active-members 1 monitor min 1 of { /Common/HTTP_Monitor } } 
tmsh create ltm pool /Common/InternetGateway_Pool { members replace-all-with { /Common/10.1.10.1:0 { address 10.1.10.1 session user-enabled state user-up } } min-active-members 1 monitor min 1 of { /Common/ICMP_Gateway_8888_Monitor /Common/ICMP_Gateway_8844_Monitor } } 
tmsh create ltm pool /Common/LoraxStaticWeb_Pool { members replace-all-with { /Common/10.1.20.41:80 { address 10.1.20.41 session user-enabled state user-up } /Common/10.1.20.42:80 { address 10.1.20.42 session user-enabled state user-up } /Common/10.1.20.43:80 { address 10.1.20.43 session user-enabled state user-up } /Common/10.1.20.44:80 { address 10.1.20.44 session user-enabled state user-up } } min-active-members 1 monitor min 1 of { /Common/HTTP_Monitor } }
tmsh create ltm pool /Common/LoraxWebServer_Pool { members replace-all-with { /Common/10.1.20.32:80 { address 10.1.20.32 session user-enabled state user-up } } min-active-members 1 monitor min 1 of { /Common/HTTP_Monitor } } 
tmsh create ltm pool /Common/ServerHTTP_Pool { members replace-all-with { /Common/10.1.20.252:80 { address 10.1.20.252 session user-enabled state user-up } } min-active-members 1 monitor min 1 of { /Common/HTTP_Monitor } }
tmsh create ltm pool /Common/ServerSSH_Pool { members replace-all-with { /Common/10.1.20.252:22 { address 10.1.20.252 session user-enabled state user-up } } min-active-members 1 monitor min 1 of { /Common/TCPHalfOpen_Monitor } }
tmsh create ltm pool /Common/ServerVNC_Pool { members replace-all-with { /Common/10.1.20.252:5900 { address 10.1.20.252 session user-enabled state user-up } } min-active-members 1 monitor min 1 of { /Common/TCPHalfOpen_Monitor } }
tmsh create ltm pool /Common/StaticWebServers_Pool { members replace-all-with { /Common/10.1.20.11:80 { address 10.1.20.11 session user-enabled state user-up } /Common/10.1.20.12:80 { address 10.1.20.12 session user-enabled state user-up } /Common/10.1.20.13:80 { address 10.1.20.13 session user-enabled state user-up } } min-active-members 1 monitor min 1 of { /Common/HTTP_Monitor } } 



╔═════════════════════════╗
║ Optional: Default Route ║
╚═════════════════════════╝

tmsh modify net route default { pool /Common/InternetGateway_Pool }



╔═════════════════╗
║   TCP Profile   ║
╚═════════════════╝

tmsh create ltm profile tcp /Common/TCP_Profile { app-service none defaults-from f5-tcp-progressive }



╔══════════════════╗
║   HTTP Profile   ║
╚══════════════════╝

tmsh create ltm profile http /Common/HTTP_Profile { app-service none defaults-from http proxy-type reverse }



╔═══════════════════════════╗
║   TCP Analytics Profile   ║
╚═══════════════════════════╝

tmsh create ltm profile tcp-analytics /Common/TCP_Analytics_Profile { app-service none collect-city enabled collect-continent enabled collect-country enabled collect-nexthop enabled collect-post-code enabled collect-region enabled collect-remote-host-ip enabled collect-remote-host-subnet enabled collected-by-client-side enabled collected-by-server-side enabled collected-stats-external-logging disabled collected-stats-internal-logging enabled defaults-from tcp-analytics description "TCP Analytics Profile Description" external-logging-publisher none }



╔════════════════════════════╗
║   HTTP Analytics Profile   ║
╚════════════════════════════╝

tmsh create ltm profile analytics /Common/HTTP_Analytics_Profile { alerts none app-service none captured-traffic-external-logging disabled captured-traffic-internal-logging enabled collect-dest-ip-geo enabled collect-geo enabled collect-http-timing-metrics enabled collect-ip enabled collect-max-tps-and-throughput enabled collect-methods enabled collect-os-and-browser enabled collect-page-load-time enabled collect-response-codes enabled collect-subnets enabled collect-url enabled collect-user-agent enabled collect-user-sessions enabled collected-stats-external-logging disabled collected-stats-internal-logging enabled countries-for-stat-collection none defaults-from analytics description "HTTP Analytics Profile Description" external-logging-publisher none ips-for-stat-collection none notification-by-email disabled notification-by-snmp disabled notification-by-syslog disabled notification-email-addresses none publish-irule-statistics enabled sampling enabled session-cookie-security always-secure session-timeout-minutes 10 smtp-config none subnet-masks none subnets-for-stat-collection none traffic-capture replace-all-with { HTTP_Analytics_Profile_Traffic_Capture { app-service none captured-protocols all captured-ready-for-js-injection disabled client-ips none dos-activity any max-application-response-time 0 max-application-response-time-valid disabled max-client-ttfb 0 max-client-ttfb-valid disabled max-clientside-network-latency 0 max-clientside-network-latency-valid disabled max-request-duration 0 max-request-duration-valid disabled max-request-size 0 max-request-size-valid disabled max-response-duration 0 max-response-duration-valid disabled max-response-size 0 max-response-size-valid disabled max-server-latency 0 max-server-latency-valid disabled max-serverside-network-latency 0 max-serverside-network-latency-valid disabled methods none min-application-response-time 0 min-client-ttfb 0 min-clientside-network-latency 0 min-request-duration 0 min-request-size 0 min-response-duration 0 min-response-size 0 min-server-latency 0 min-serverside-network-latency 0 request-captured-parts all request-content-filter-search-part none request-content-filter-search-string none response-captured-parts all response-codes none response-content-filter-search-part none response-content-filter-search-string none url-filter-type all url-path-prefixes none user-agent-substrings none node-addresses none virtual-servers none } } urls-for-stat-collection none }



╔═════════════════════════════╗
║   TLS Client Side Profile   ║
╚═════════════════════════════╝

tmsh install /sys crypto cert Imported-SSL-Certificate from-local-file /config/cloud/domain.name.rsa.crt
tmsh install /sys crypto key Imported-SSL-Key from-local-file /config/cloud/domain.name.rsa.key
tmsh create ltm profile client-ssl /Common/Client_TLS_Profile { allow-expired-crl disabled app-service none authenticate once c3d-drop-unknown-ocsp-status drop c3d-ocsp none ca-file none cert-key-chain replace-all-with { set0 { cert Imported-SSL-Certificate key Imported-SSL-Key } } cert-lookup-by-ipaddr-port disabled cipher-group none ciphers DEFAULT client-cert-ca none crl-file none description none ocsp-stapling disabled options { dont-insert-empty-fragments no-tlsv1.3 } peer-cert-mode ignore renegotiation enabled server-name none sni-default true sni-require false ssl-c3d disabled ssl-forward-proxy disabled ssl-forward-proxy-bypass disabled }



╔════════════════════════════╗
║   IP Intelligence Policy   ║
╚════════════════════════════╝
tmsh create security ip-intelligence policy /Common/IP_Intelligence_Policy { blacklist-categories replace-all-with { additional { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } appiq_badactors { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } application_denial_of_service { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } attacked_ips { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } botnets { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } cloud_provider_networks { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } denial_of_service { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } infected_sources { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } mobile_threats { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } phishing { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } proxy { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } scanners { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } spam_sources { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } tor_proxy { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } web_attacks { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } windows_exploits { action drop log-blacklist-hit-only yes match-direction-override match-source-and-destination } } default-log-blacklist-hit-only yes }
tmsh modify security ip-intelligence global-policy { ip-intelligence-policy /Common/IP_Intelligence_Policy }



╔══════════════════════════╗
║   Security Log Profile   ║
╚══════════════════════════╝

tmsh create sys log-config publisher /Common/Local_DataSafe { destinations replace-all-with { local-syslog { } } }
tmsh create security log profile /Common/Log_ALL
tmsh modify security log profile /Common/Log_ALL { antifraud replace-all-with { Log_ALL { events replace-all-with { alert { format { user-template "\"${event_name}\",\"${timestamp}\",\"${url}\",\"${username}\",\"${alert_type}\",\"${alert_comp}\",\"${alert_details}\",\"${alert_info_ex}\",\"${alert_score}\",\"${alert_origin}\",\"${client_ip}\",\"${dest_ip}\",\"${dest_port}\",\"${fingerprint}\",\"${user_agent}\",\"${geo}\",\"${bigip_mgmt_ip}\"" } } login { format { user-template "\"${event_name}\",\"${timestamp}\",\"${url}\",\"${username}\",\"${login_sts}\",\"${login_details}\",\"${login_affected}\",\"${client_ip}\",\"${dest_ip}\",\"${dest_port}\",\"${fingerprint}\",\"${user_agent}\",\"${geo}\",\"${bigip_mgmt_ip}\"" } } } rate-limit-template "\"${event_name}\",\"${timestamp}\",\"${vs_name}\",\"${sent}\",\"${dropped}\",\"${errors}\"" remote-publisher Local_DataSafe } } }
tmsh modify security log profile /Common/Log_ALL { application replace-all-with { Log_ALL { filter replace-all-with { log-challenge-failure-requests { values replace-all-with { enabled } } request-type { values replace-all-with { all } } } guarantee-logging enabled guarantee-response-logging enabled response-logging all } } }
tmsh modify security log profile /Common/Log_ALL { bot-defense replace-all-with { Log_ALL { filter { log-alarm enabled log-block enabled log-browser enabled log-browser-verification-action enabled log-captcha enabled log-challenge-failure-request enabled log-device-id-collection-request enabled log-honey-pot-page enabled log-malicious-bot enabled log-mobile-application enabled log-none enabled log-rate-limit enabled log-redirect-to-pool enabled log-suspicious-browser enabled log-tcp-reset enabled log-trusted-bot enabled log-unknown enabled log-untrusted-bot enabled } local-publisher local-db-publisher } } }
tmsh modify security log profile /Common/Log_ALL { dos-application replace-all-with { Log_ALL { local-publisher local-db-publisher } } }
tmsh modify security log profile /Common/Log_ALL { ip-intelligence { log-publisher local-db-publisher log-translation-fields enabled } }
tmsh modify security log profile global-network { ip-intelligence { log-geo enabled log-shun enabled } }











Device ID configuration (when applicable)

DDoS Configuration (when applicable)

ASM Configuration (when applicable)

APM Configuration (when applicable)





╔═════════════════════╗
║   Virtual Servers   ║
╚═════════════════════╝



--------- TLS Client Side Profile ---------
tmsh modify ltm virtual /Common/DVWA_Service_HTTPS { profiles add { /Common/Client_TLS_Profile } }
tmsh modify ltm virtual /Common/serviceMain { profiles add { /Common/Client_TLS_Profile } }
tmsh modify ltm virtual /Common/StaticWeb_Service_HTTPS { profiles add { /Common/Client_TLS_Profile } }
tmsh modify ltm virtual /Common/Hackazon_Service_HTTPS { profiles add { /Common/Client_TLS_Profile } }



--------- IP Intelligence Policy ---------

tmsh modify ltm virtual /Common/DVWA_Service_HTTPS { ip-intelligence-policy /Common/IP_Intelligence_Policy }
tmsh modify ltm virtual /Common/SSH_Service_TCP { ip-intelligence-policy /Common/IP_Intelligence_Policy }
tmsh modify ltm virtual /Common/serviceMain { ip-intelligence-policy /Common/IP_Intelligence_Policy }
tmsh modify ltm virtual /Common/DVWA_Service_HTTPS-Redirect- { ip-intelligence-policy /Common/IP_Intelligence_Policy }
tmsh modify ltm virtual /Common/StaticWeb_Service_HTTPS { ip-intelligence-policy /Common/IP_Intelligence_Policy }
tmsh modify ltm virtual /Common/serviceMain-Redirect- { ip-intelligence-policy /Common/IP_Intelligence_Policy }
tmsh modify ltm virtual /Common/Hackazon_Service_HTTPS { ip-intelligence-policy /Common/IP_Intelligence_Policy }
tmsh modify ltm virtual /Common/StaticWeb_Service_HTTPS-Redirect- { ip-intelligence-policy /Common/IP_Intelligence_Policy }
tmsh modify ltm virtual /Common/Hackazon_Service_HTTPS-Redirect- { ip-intelligence-policy /Common/IP_Intelligence_Policy }
tmsh modify ltm virtual /Common/VNC_Service_TCP { ip-intelligence-policy /Common/IP_Intelligence_Policy }



--------- Security Log Profile ---------

tmsh modify ltm virtual /Common/DVWA_Service_HTTPS { security-log-profiles replace-all-with { /Common/Log_ALL } }
tmsh modify ltm virtual /Common/SSH_Service_TCP { security-log-profiles replace-all-with { /Common/Log_ALL } }
tmsh modify ltm virtual /Common/serviceMain { security-log-profiles replace-all-with { /Common/Log_ALL } }
tmsh modify ltm virtual /Common/DVWA_Service_HTTPS-Redirect- { security-log-profiles replace-all-with { /Common/Log_ALL } }
tmsh modify ltm virtual /Common/StaticWeb_Service_HTTPS { security-log-profiles replace-all-with { /Common/Log_ALL } }
tmsh modify ltm virtual /Common/serviceMain-Redirect- { security-log-profiles replace-all-with { /Common/Log_ALL } }
tmsh modify ltm virtual /Common/Hackazon_Service_HTTPS { security-log-profiles replace-all-with { /Common/Log_ALL } }
tmsh modify ltm virtual /Common/StaticWeb_Service_HTTPS-Redirect- { security-log-profiles replace-all-with { /Common/Log_ALL } }
tmsh modify ltm virtual /Common/Hackazon_Service_HTTPS-Redirect- { security-log-profiles replace-all-with { /Common/Log_ALL } }
tmsh modify ltm virtual /Common/VNC_Service_TCP { security-log-profiles replace-all-with { /Common/Log_ALL } }























